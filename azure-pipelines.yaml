variables:
 MY_SQL_DB_HOST: $(MY_SQL_DB_HOST)

# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:

  - bash: |
      echo "Using an input-macro works: $(mySecret)"
      echo "Using the env var directly does not work: $MYSECRET"
      echo "Using a global secret var mapped in the pipeline does not work either: $GLOBAL_MYSECRET"
      echo "Using a global non-secret var mapped in the pipeline works: $GLOBAL_MY_MAPPED_ENV_VAR" 
      echo "Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR"
    env:
      MY_SQL_DB_HOST: $(MY_SQL_DB_HOST) # the recommended way to map to an env variable
  
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"

  - script: |
      yarn install
    displayName: "install dependencies"
    
  - script: |
      yarn run test
    displayName: "run tests"

  - script: |
      yarn run build
    displayName: "build project"
    
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunner: JUnit
      testResultsFiles: "**/test-report.xml"
      failTaskOnFailedTests: true
      
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura # or JaCoCo
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      
  - task: CopyFiles@2
    inputs:
      Contents: "$(System.DefaultWorkingDirectory)/dist/**" # Pull the build directory (React)
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
      ArtifactName: "build-folder" # output artifact named www
